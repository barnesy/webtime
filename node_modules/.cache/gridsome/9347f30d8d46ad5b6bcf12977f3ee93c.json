{"remainingRequest":"/Users/barnesy/Projects/webtime/node_modules/babel-loader/lib/index.js??ref--1-1!/Users/barnesy/Projects/webtime/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/barnesy/Projects/webtime/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/barnesy/Projects/component-library/lib/templates/ContentfulBlogPost.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/barnesy/Projects/component-library/lib/templates/ContentfulBlogPost.vue","mtime":1665597163875},{"path":"/Users/barnesy/Projects/webtime/node_modules/cache-loader/dist/cjs.js","mtime":1650484540840},{"path":"/Users/barnesy/Projects/webtime/node_modules/babel-loader/lib/index.js","mtime":1650484540785},{"path":"/Users/barnesy/Projects/webtime/node_modules/cache-loader/dist/cjs.js","mtime":1650484540840},{"path":"/Users/barnesy/Projects/webtime/node_modules/vue-loader/lib/index.js","mtime":1659976370839}],"contextDependencies":[],"result":["import MarkdownIt from 'markdown-it';\nlet placeholder = \"https://images.ctfassets.net/ncgri9n8y2w0/4TrUKxtHvhJEMH1Ki0P8GO/c61275e1dbcea68f5600dbfe1211e7de/dark-green.png\";\nexport default {\n  metaInfo() {\n    return {\n      title: this.$page.post.title,\n      meta: [{\n        name: 'description',\n        content: this.$page.post.title\n      }, {\n        property: 'og:title',\n        content: this.$page.post.title\n      }, {\n        property: 'og:description',\n        content: this.$page.post.title\n      }, {\n        property: 'og:image',\n        content: \"https:\" + this.ogImage\n      }, {\n        property: 'og:url',\n        content: this.$context.url + this.$page.post.slug\n      }]\n    };\n  },\n  data() {\n    return {\n      ogImage: placeholder\n    };\n  },\n  computed: {\n    content() {\n      const md = new MarkdownIt();\n      return md.render(this.$page.post.content);\n    }\n  },\n  mounted() {\n    let img = this.$page.post.featuredImage;\n    this.ogImage = img ? img.file.url : placeholder;\n  }\n};",{"version":3,"mappings":"AAuCA;AAEA;AAEA;EACAA;IACA;MACAC;MACAC,OACA;QACAC;QACAC;MACA,GACA;QACAC;QACAD;MACA,GACA;QACAC;QACAD;MACA,GACA;QACAC;QACAD;MACA,GACA;QACAC;QACAD;MACA;IAEA;EACA;EACAE;IACA;MACAC;IACA;EACA;EACAC;IACAJ;MACA;MAEA;IACA;EACA;EACAK;IACA;IACA;EACA;AACA","names":["metaInfo","title","meta","name","content","property","data","ogImage","computed","mounted"],"sourceRoot":"../component-library/lib/templates","sources":["ContentfulBlogPost.vue"],"sourcesContent":["<template>\n  <Leaf>\n    <Header class=\"v2\"\n            colColor=\"rgba(255,255,255, 0.9)\"\n            padding=\"3rem\"\n            :bgImage=\"'url(' + this.ogImage + ')'\"\n    >\n        <template>{{ $page.post.title }}</template>\n        <template #support>{{ $page.post.shortDescription }}</template>\n      </Header>\n    <PageSection class=\"narrow\" padding=\"6rem 3rem\">\n\n      <g-image v-if=\"$page.post.featuredImage\" :src=\"$page.post.featuredImage.file.url\"/>\n     \n      <iframe v-if=\"$page.post.videoid\" width=\"100%\" height=\"641\" :src=\"'https://www.youtube.com/embed/' + $page.post.videoid\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n  \n      <div v-html=\"content\" />\n    </PageSection>\n  </Leaf>\n</template>\n\n<page-query>\n  query Post($id: ID) {\n    post: contentfulBlogPost (id: $id) {\n      title\n      slug\n      shortDescription\n      featuredImage {\n        file {\n          url\n        }\n      }\n      videoid\n      content\n    }\n  }\n</page-query>\n\n<script>\nimport MarkdownIt from 'markdown-it'\n\nlet placeholder =  \"https://images.ctfassets.net/ncgri9n8y2w0/4TrUKxtHvhJEMH1Ki0P8GO/c61275e1dbcea68f5600dbfe1211e7de/dark-green.png\"\n\nexport default {\n  metaInfo() {\n    return {\n      title: this.$page.post.title,\n      meta: [\n        {\n          name: 'description',\n          content: this.$page.post.title\n        },\n        {\n          property: 'og:title',\n          content: this.$page.post.title\n        },\n        {\n          property: 'og:description',\n          content: this.$page.post.title\n        },\n        {\n          property: 'og:image',\n          content: \"https:\" + this.ogImage\n        },\n        {\n          property: 'og:url',\n          content:  this.$context.url + this.$page.post.slug\n        },\n      ],\n    }\n  },\n  data() {\n    return {\n      ogImage: placeholder\n    }\n  },\n  computed: {\n    content() {\n      const md = new MarkdownIt()\n\n      return md.render(this.$page.post.content)\n    },\n  },\n  mounted() {\n    let img = this.$page.post.featuredImage\n    this.ogImage = (img) ?  img.file.url : placeholder\n  }\n}\n</script>"]}]}